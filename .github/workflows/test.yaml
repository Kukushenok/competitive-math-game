name: .NET CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - uses: actions/checkout@v4
      - name: Restore
        run: |
          cd src/ServicesUnitTests
          dotnet restore
      - name: Run Unit Tests
        run: |
          cd src/ServicesUnitTests
          dotnet test --logger "trx;LogFileName=unit-tests.trx" \
                      --results-directory ./TestResults \
                      --collect:"XPlat Code Coverage"
      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            src/ServicesUnitTests/allure-results
            src/ServicesUnitTests/TestResults

  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    needs: unit_tests
    services:
      docker:
        image: docker:dind
        options: >-
          --privileged
          --host=tcp://0.0.0.0:2375
          --tls=false
    env:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_TLS_CERTDIR: ""
    steps:
      - uses: actions/checkout@v4
      - name: Restore
        run: |
          cd src/RepositoriesTests
          dotnet restore -s "https://api.nuget.org/v3/index.json" -s $NUGET_SOURCE
      - name: Run Integration Tests
        run: |
          cd src/RepositoriesTests
          dotnet test --logger "trx;LogFileName=integration-tests.trx" \
                      --results-directory ./TestResults
      - name: Upload Integration Test Results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            src/RepositoriesTests/allure-results
            src/RepositoriesTests/TestResults

  merge_allure:
    name: Merge Allure Results
    runs-on: ubuntu-latest
    container: alpine:latest
    needs: [unit_tests, integration_tests]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Install dependencies
        run: apk add --no-cache bash
      - name: Merge Allure Results
        run: |
          mkdir -p merged-allure-results
          cp -r artifacts/unit-test-results/allure-results/* merged-allure-results/ || true
          cp -r artifacts/integration-test-results/allure-results/* merged-allure-results/ || true
      - name: Upload Merged Allure
        uses: actions/upload-artifact@v4
        with:
          name: merged-allure-results
          path: merged-allure-results

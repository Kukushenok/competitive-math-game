name: .NET CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"

permissions:
  contents: write 

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - uses: actions/checkout@v4
      - name: Restore
        run: |
          cd src/ServicesUnitTests
          dotnet restore
      - name: Run Unit Tests
        run: |
          cd src/ServicesUnitTests
          dotnet test --logger "trx;LogFileName=unit-tests.trx" \
                      --results-directory ./TestResults \
                      --collect:"XPlat Code Coverage"
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            src/ServicesUnitTests/bin/Debug/net8.0/allure-results

  component_tests:
    name: Component Tests
    runs-on: ubuntu-latest
    needs: unit_tests 
    env:
      DOTNET_TESTCONTAINERS_ENABLED: true
      TESTCONTAINERS_RYUK_DISABLED: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: |
          cd src/RepositoriesTests
          dotnet restore -s "https://api.nuget.org/v3/index.json" -s $NUGET_SOURCE
      - name: Run Component Tests
        run: |
          cd src/RepositoriesTests
          dotnet test --logger "trx;LogFileName=integration-tests.trx" \
                      --results-directory ./TestResults
      - name: Upload Component Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: component-test-results
          path: |
            src/RepositoriesTests/bin/Debug/net8.0/allure-results

  integration_tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: component_tests 
    env:
      DOTNET_TESTCONTAINERS_ENABLED: true
      TESTCONTAINERS_RYUK_DISABLED: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Start the application
        run: |
          cd src/
          docker compose -f docker-compose.integration.yml up -d
      - name: Wait for services to be healthy
        run: |
          echo "Waiting for services..."
          sleep 20
          docker ps -a
      - name: Restore test project
        run: |
          cd src/IntegrationalTests
          dotnet restore -s "https://api.nuget.org/v3/index.json" -s $NUGET_SOURCE
      - name: Run Integration Tests
        run: |
          cd src/IntegrationalTests
          dotnet test --logger "trx;LogFileName=e2e-tests.trx" \
                      --results-directory ./TestResults
      - name: Stop services
        if: always()
        run: |
          cd src/
          docker compose -f docker-compose.integration.yml down -v
      - name: Upload E2E Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            src/IntegrationalTests/bin/Debug/net8.0/allure-results


  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: integration_tests 
    env:
      DOTNET_TESTCONTAINERS_ENABLED: true
      TESTCONTAINERS_RYUK_DISABLED: true
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Start the application
        run: |
          cd src/
          docker compose -f docker-compose.integration.yml up -d
      - name: Wait for services to be healthy
        run: |
          echo "Waiting for services..."
          sleep 20
          docker ps -a
      - name: Restore test project
        run: |
          cd src/E2ETests
          dotnet restore -s "https://api.nuget.org/v3/index.json" -s $NUGET_SOURCE
      - name: Run E2E Tests
        run: |
          cd src/E2ETests
          dotnet test --logger "trx;LogFileName=e2e-tests.trx" \
                      --results-directory ./TestResults
      - name: Stop services
        if: always()
        run: |
          cd src/
          docker compose -f docker-compose.integration.yml down -v
      - name: Upload E2E Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            src/E2ETests/bin/Debug/net8.0/allure-results



  merge_allure:
    name: Merge Allure Results
    runs-on: ubuntu-latest
    container: alpine:latest
    needs: [unit_tests, integration_tests, e2e_tests]
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Install dependencies
        run: apk add --no-cache bash git

      - name: Merge Allure Results
        run: |
          mkdir -p merged-allure-results
          cp -r artifacts/unit-test-results/* merged-allure-results/ || true
          cp -r artifacts/component-test-results/* merged-allure-results/ || true
          cp -r artifacts/integration-test-results/* merged-allure-results/ || true
          cp -r artifacts/e2e-test-results/* merged-allure-results/ || true

      - name: Checkout gh-pages (external repo)
        uses: actions/checkout@v4
        with:
          repository: Kukushenok/competitive-math-game-tests
          ref: gh-pages
          path: gh-pages
          token: ${{ secrets.PAGES_PUBLISH_REPO }}

      - name: Copy history from previous report
        run: |
          mkdir -p allure-history
          if [ -d gh-pages/last_history ]; then
            cp -r gh-pages/last_history allure-history/
          fi

      - name: Upload Merged Allure
        uses: actions/upload-artifact@v4
        with:
          name: merged-allure-results
          path: merged-allure-results

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history   # ðŸ‘ˆ keeps history
          allure_results: merged-allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          external_repository: Kukushenok/competitive-math-game-tests
          personal_token: ${{ secrets.PAGES_PUBLISH_REPO }}
          publish_branch: gh-pages
          publish_dir: allure-history

using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using CompetitiveBackend.Core.Objects;

/**
* Generated by MongoDB Relational Migrator
* https://www.mongodb.com/products/relational-migrator
* Collection: competition
* Language: C#
* Template: Persistence Layer
* Generated on 2025-05-20
*/
namespace Model {

  /// <summary>
  /// 
  /// </summary>
    public class CompetitionEntity {
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [BsonElement("_id")]
        [BsonId]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets CompetitionName
        /// </summary>
        [BsonElement("competitionName")]
        public string CompetitionName { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [BsonElement("description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [BsonElement("startTime")]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// Gets or Sets EndTime
        /// </summary>
        [BsonElement("endTime")]
        public DateTime EndTime { get; set; }

        /// <summary>
        /// Gets or Sets LevelData
        /// </summary>
        [BsonElement("levelData")]
        public byte[] LevelData { get; set; }

        /// <summary>
        /// Gets or Sets HasEnded
        /// </summary>
        [BsonElement("hasEnded")]
        public bool HasEnded { get; set; }

        public CompetitionEntity(int id, Competition comp)
        {
            Id = id;
            CompetitionName = comp.Name;
            Description = comp.Description;
            StartTime = comp.StartDate;
            EndTime = comp.EndDate;
            LevelData = null!;
            HasEnded = false;
        }
        /// <summary>
        /// Get the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()  {
            var sb = new StringBuilder();
            sb.Append("class CompetitionEntity {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CompetitionName: ").Append(CompetitionName).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  LevelData: ").Append(LevelData).Append("\n");
            sb.Append("  HasEnded: ").Append(HasEnded).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Get the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson() {
            return this.ToJson<CompetitionEntity>();
        }
    }
    public static class CompetitionConverter
    {
        public static Competition Convert(this CompetitionEntity ent) => new Competition(ent.CompetitionName, ent.Description, ent.StartTime, ent.EndTime, ent.Id);
    }
}

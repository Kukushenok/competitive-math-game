using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using CompetitiveBackend.Core.Objects;

/**
* Generated by MongoDB Relational Migrator
* https://www.mongodb.com/products/relational-migrator
* Collection: playerParticipation
* Language: C#
* Template: Persistence Layer
* Generated on 2025-05-20
*/
namespace Model {

    /// <summary>
    /// 
    /// </summary
    public class PlayerParticipationEntity {
        /// <summary>
        /// Gets or Sets CompetitionId
        /// </summary>
        [BsonElement("_id")]
        public ObjectId ID { get; set; }

        [BsonElement("competitionId")]
        public int CompetitionId { get; set; }

        /// <summary>
        /// Gets or Sets AccountId
        /// </summary>
        [BsonElement("accountId")]
        public int AccountId { get; set; }

        /// <summary>
        /// Gets or Sets Score
        /// </summary>
        [BsonElement("score")]
        public int Score { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdateTime
        /// </summary>
        [BsonElement("lastUpdateTime")]
        public DateTime LastUpdateTime { get; set; }


        /// <summary>
        /// Get the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString() {
            var sb = new StringBuilder();
            sb.Append("class PlayerParticipationEntity {\n");
            sb.Append("  CompetitionId: ").Append(CompetitionId).Append("\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("  LastUpdateTime: ").Append(LastUpdateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Get the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson() {
            return this.ToJson<PlayerParticipationEntity>();
        }
        public PlayerParticipationEntity(int competition, int player, int score, DateTime? lastUpdateTime)
        {
            this.CompetitionId = competition;
            this.AccountId = player;
            this.Score = score;
            this.LastUpdateTime = lastUpdateTime ?? DateTime.UtcNow;
        }

    }
    public static class PlayerParticipationEntityConverter
    {
        public static PlayerParticipation Convert(this PlayerParticipationEntity ent, CompetitionEntity? entD, AccountEntity? accD)
        {
            PlayerProfile? p = accD?.ConvertToProfile();
            Competition? c = entD?.Convert();
            return new PlayerParticipation(ent.CompetitionId, ent.AccountId, ent.Score, ent.LastUpdateTime, p, c);
        }
        public static PlayerParticipationEntity Convert(this PlayerParticipation p)
        {
            return new PlayerParticipationEntity(p.CompetitionId, p.PlayerProfileId, p.Score, p.LastUpdateTime);
        }
    }
}
